void main()
{
	if(GetLocalFlag(FragmentRead51) == 1 )
	{
		CallScript("_kakera50_02");
		SetLocalFlag( LFragmentLoop, 0 );
		Return();
	}

	DrawScene( "black", 400 );

	DrawScene( "white", 1000 );

	PlayBGM( 0, "maturi_01_Ver2", 120, 0 );

	DrawScene( "background/fure2", 400 );

	ClearMessage();
	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　７つのカケラを様々な奇跡で結び集め、",
		   NULL, "Après avoir assemblé les sept autres fragments, je me tournai enfin vers ce fragment, et le pris en main.", Line_ContinueAfterTyping);
	SetValidityOfInput( FALSE );
	Wait( 800 );
	SetValidityOfInput( TRUE );
	OutputLine(NULL, "……私はようやくこのカケラを手にする。",
		   NULL, " Ce fragment contient notre ultime destinée.", Line_Normal);
	ClearMessage();

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　…このカケラの中に、私たちの最後の運命が詰まっている。",
		   NULL, "Mais je veux que tu attendes avant de porter le regard à l'intérieur de ce fragment.", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　でも、……覗く前に、少しだけ待ってほしいの。",
		   NULL, "Car dès que nous regarderons quel sort nous attend, ce sort deviendra définitif et irrévocable.", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　この中にある運命は、私たちが覗けばそれで決まってしまう。",
		   NULL, "... Je t'ai déjà parlé de cette histoire de chat enfermé dans une boîte ?", Line_Normal);
	ClearMessage();

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　……猫を詰めた箱の話をしたことはあったっけ？",
		   NULL, "Il y a un chat dans une boîte fermée.", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode) == 0) { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }


	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　箱の中の猫は生きているか、死んでいるか。",
		   NULL, "Est-il mort, ou vivant ?", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　…開ければわかることだけど、開けるまではわからない。",
		   NULL, "Si l'on ouvre la boîte, on le saura, mais tant que l'on ne l'aura pas ouverte, on ne pourra pas le savoir.", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode) == 0) { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }


	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　生きているかもしれないし、死んでいるかもしれない。",
		   NULL, "Peut-être vit-il encore, et peut-être non.", Line_Normal);
	ClearMessage();

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　つまり、中身のわからない開ける前の箱の中には、",
		   NULL, "Et donc tant que la boîte reste fermée,", Line_ContinueAfterTyping);
	SetValidityOfInput( FALSE );
	Wait( 800 );
	SetValidityOfInput( TRUE );
	OutputLine(NULL, "……生きた猫と、死んだ猫が同時に存在しているということなの。",
		   NULL, " il y a dans la boîte deux chats qui normalement ne peuvent pas coexister dans le même univers : un mort et un vivant.", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode) == 0) { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }


	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　そして、開けて真実を知った瞬間に、ありえない方が消えてしまう。",
		   NULL, "Ce n'est qu'en ouvrant la boîte que l'on découvre s'il est l'un ou l'autre. Le chat qui ne peut pas exister disparaît.", Line_Normal);
	ClearMessage();

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　…このカケラの中身も同じこと。",
		   NULL, "Ce dernier fragment est similaire à cette boîte de Schrödinger.", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　この中には、私たちの望む未来と、鷹野の望む未来が同時に存在している。",
		   NULL, "Tant que nous n'y plongeons pas notre regard, deux futurs y coexistent : celui que nous voulons, et celui que veut Takano.", Line_Normal);
	ClearMessage();

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　それらは相反していて、互いの未来を否定し合っている。",
		   NULL, "Et comme le déroulement de l'un exclut le déroulement de l'autre...", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode) == 0) { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }


	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　覗けば、片方の未来は、消えてしまう。",
		   NULL, "... eh bien, lorsque nous regarderons de quoi ce fragment est fait, l'un des futurs possibles nous apparaîtra, et l'autre disparaîtra immédiatement.", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　もし、……私たちの駒がこれ以上なく充分に揃っているならば、",
		   NULL, "Si tu penses que nos pièces sont prêtes et que nous ne pourrons plus en avoir d'autres, ou de meilleures,", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	SetValidityOfInput( FALSE );
	Wait( 800 );
	SetValidityOfInput( TRUE );
	OutputLine(NULL, "…私たちは覚悟を決めて、このカケラを覗いてみよう。",
		   NULL, "alors j'imagine qu'il est temps de prendre notre courage à deux mains et de regarder ce que le futur nous réserve.", Line_Normal);
	ClearMessage();

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　…でも。",
		   NULL, "Mais bon...", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　私たちはゲーム盤の上に、これまでと同じ駒しか、まだ並べていない。",
		   NULL, "Pour l'instant, nous n'avons sur notre échiquier que les quelques pièces sur lesquelles nous pouvions toujours compter.", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　そして、その条件でのゲームもやはり、鷹野たちの圧勝だった。",
		   NULL, "Et jusqu'à présent, avec ces pièces que nous avons là, Miyo Takano nous a mis une pile monumentale.", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode) == 0) { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }


	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　すでに皆殺し編のカケラで試している。",
		   NULL, "Il suffit de regarder le fragment du septième tome pour s'en convaincre.", Line_Normal);
	ClearMessage();

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　まだ、…駒がいるのだ。",
		   NULL, "Nous avons besoin d'autres pièces encore.", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　強い力を持ち、ルールＹを打ち砕いてくれる強さを持った駒の協力が。",
		   NULL, "Il nous faut encore trouver des pièces, si possible des pièces capables de contrer la loi Y.", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode) == 0) { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }


	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　……その駒が得られるまで、",
		   NULL, "Tant que nous n'aurons aucune pièce spécifiquement pour contrer cette loi,", Line_ContinueAfterTyping);
	SetValidityOfInput( FALSE );
	Wait( 750 );
	SetValidityOfInput( TRUE );
	OutputLine(NULL, "……私は恐ろしくて、このカケラを覗くことができない…。",
		   NULL, " je dois t'avouer avoir bien trop peur pour oser vérifier le contenu de ce fragment.", Line_Normal);
	ClearMessage();

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　でも、そんな駒をどうやって得るの？",
		   NULL, "Mais comment trouver une telle pièce ? Où pourrait-elle se trouver ?", Line_WaitForInput);
	OutputLine(NULL, "　今まで一度も得たことがないのに？",
		   NULL, " Nous n'en avons jamais trouvé jusqu'à présent...", Line_Normal);
	ClearMessage();

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　……それを得るには、",
		   NULL, "J'ai bien peur que", Line_WaitForInput);
	OutputLine(NULL, "もう一度だけ、",
		   NULL, " si nous voulons en trouver une…", Line_ContinueAfterTyping);
	SetValidityOfInput( FALSE );
	Wait( 1000 );
	SetValidityOfInput( TRUE );
	OutputLine(NULL, "いる。",
		   NULL, " On ne va pas avoir le choix.", GetGlobalFlag(GLinemodeSp));
	if (GetGlobalFlag(GADVMode)) { ClearMessage(); } else { OutputLineAll(NULL, "\n", Line_ContinueAfterTyping); }

	if (GetGlobalFlag(GADVMode)) { OutputLineAll("", NULL, Line_ContinueAfterTyping); }
	OutputLine(NULL, "　奇跡の力が、いる。",
		   NULL, "Il va nous falloir encore une fois un miracle.", Line_Normal);
	ClearMessage();

	CallScript( "&eye" );
	FadeOutBGM( 0, 1000, FALSE );
	DrawScene( "black", 1000 );

}
